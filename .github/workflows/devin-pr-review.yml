name: Automated PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  review-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR files
        id: pr-files
        run: |
          FILES=$(curl -s -H "Authorization: token ${{ secrets.GIT_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" | \
            jq -r '[.[].filename] | @json')
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Create Devin Review Session
        id: devin-review
        env:
          DEVIN_API_KEY: ${{ secrets.DEVIN_API_KEY }}
          FILES_TO_REVIEW: ${{ steps.pr-files.outputs.files }}
        run: |
          # Create JSON payload directly with jq
          JSON_PAYLOAD=$(jq -n \
            --arg files "$FILES_TO_REVIEW" \
            '{
              "prompt": "You are PR Reviewer Devin. Your task is to review the following pull request based on our code conformance rules and leave feedback as comments.\n--user-afk\n\nCode Conformance Rules File Path:\n./CONTRIBUTING.md\n\nFiles to review:\n" + $files + "\n\nYour tasks:\n1. Review the changes in the PR files\n2. Analyze each changed file for conformance violations\n3. Provide specific, actionable feedback for any violations\n4. If no violations are found, confirm compliance\n5. Return feedback as a JSON array of comments\n\nGuidelines:\n- Be specific about which rules are violated\n- Provide clear suggestions for fixing violations\n- Use a professional and constructive tone\n- Reference specific lines of code in your comments\n- Only comment on actual violations, not style preferences",
              "unlisted": true
            }')
          
          # Create Devin review session
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $DEVIN_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            "https://api.devin.ai/v1/sessions")
          
          # Check for errors and set outputs
          if [ "$(echo "$RESPONSE" | jq -r '.error')" != "null" ]; then
            echo "Error creating Devin session: $(echo "$RESPONSE" | jq -r '.error')"
            exit 1
          fi
          
          echo "session-id=$(echo "$RESPONSE" | jq -r '.session_id')" >> $GITHUB_OUTPUT
          echo "session-url=$(echo "$RESPONSE" | jq -r '.url')" >> $GITHUB_OUTPUT
          echo "Devin session created successfully: $(echo "$RESPONSE" | jq -r '.session_id')"
