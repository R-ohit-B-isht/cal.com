name: Automated PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  review-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR files
        id: pr-files
        run: |
          FILES=$(curl -s -H "Authorization: token ${{ secrets.GIT_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" | \
            jq -r '[.[].filename] | @json')
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Create Devin Review Session
        id: devin-review
        env:
          DEVIN_API_KEY: ${{ secrets.DEVIN_API_KEY }}
          FILES_TO_REVIEW: ${{ steps.pr-files.outputs.files }}
        run: |
          # Create review prompt
          REVIEW_PROMPT=$(cat << 'EOF'
          You are PR Reviewer Devin. Your task is to review the following pull request based on our code conformance rules and leave feedback as comments.
          --user-afk
          
          Code Conformance Rules File Path:
          ./CONTRIBUTING.md
          
          Files to review:
          $FILES_TO_REVIEW
          
          Your tasks:
          1. Review the changes in the PR files
          2. Analyze each changed file for conformance violations
          3. Provide specific, actionable feedback for any violations
          4. If no violations are found, confirm compliance
          5. Return feedback as a JSON array of comments
          
          Guidelines:
          - Be specific about which rules are violated
          - Provide clear suggestions for fixing violations
          - Use a professional and constructive tone
          - Reference specific lines of code in your comments
          - Only comment on actual violations, not style preferences
          EOF
          )
          
          # Create Devin review session
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $DEVIN_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"prompt\": \"$REVIEW_PROMPT\", \"unlisted\": true}" \
            "https://api.devin.ai/v1/sessions")
          
          # Check for errors and set outputs
          if [ "$(echo "$RESPONSE" | jq -r '.error')" != "null" ]; then
            echo "Error creating Devin session: $(echo "$RESPONSE" | jq -r '.error')"
            exit 1
          fi
          
          echo "session-id=$(echo "$RESPONSE" | jq -r '.session_id')" >> $GITHUB_OUTPUT
          echo "session-url=$(echo "$RESPONSE" | jq -r '.url')" >> $GITHUB_OUTPUT
          echo "Devin session created successfully: $(echo "$RESPONSE" | jq -r '.session_id')"
